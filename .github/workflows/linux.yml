name: linux-build

on: push

jobs:
  build-debug:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - cc: clang-12
            cxx: clang++-12
            buildtype: 'Debug'
            test: true
            upload: false
          - cc: clang-12
            cxx: clang++-12
            buildtype: 'Release'
            test: false
            upload: true
    timeout-minutes: 500
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Update
        run: sudo apt update
      - name: Install Snap (to install Neovim nightly)
        if: matrix.test
        run: sudo apt install snapd
      - name: Install Neovim Nightly
        if: matrix.test
        run: sudo snap install --edge nvim --classic
      - name: Add Neovim to PATH
        if: matrix.test
        run: echo "/snap/bin" >> $GITHUB_PATH
        shell: bash
      - name: Install dependencies for vcpkg packages
        run: >
          sudo apt-get install gperf autoconf build-essential libtool
          libgl1-mesa-dev libxi-dev libx11-dev libxext-dev
          libxkbcommon-x11-dev libglu1-mesa-dev libx11-xcb-dev
          '^libxcb.*-dev' libxrender-dev ninja-build curl
          zip unzip tar autopoint python
      - name: Restore deps
        uses: actions/cache@v2
        with:
          path: |
            build/vcpkg_installed
          key: ${{ runner.os }}-${{ hashFiles('vcpkg.json') }}-${{ env.CC }}-${{ env.CXX }}
      - name: Build nvui and nvui_test in Debug mode
        if: matrix.buildtype == 'Debug'
        run: |
          chmod +x ./scripts/linux/build-debug.sh
          ./scripts/linux/build-debug.sh
      - name: Run tests
        if: matrix.test
        run: ./build/nvui_test
      - name: Copy executable and assets into a folder
        if: matrix.upload
        run: |
          chmod +x ./scripts/linux/package.sh
          chmod +x ./scripts/linux/build-release.sh
          ./scripts/linux/package.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: nvui-linux-x64
          if-no-files-found: ignore
          path: build/packaged
